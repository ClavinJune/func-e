// Copyright 2019 Tetrate
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/manifest.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Compliance int32

const (
	Compliance_FIPS_1402 Compliance = 0
)

var Compliance_name = map[int32]string{
	0: "FIPS_1402",
}

var Compliance_value = map[string]int32{
	"FIPS_1402": 0,
}

func (x Compliance) String() string {
	return proto.EnumName(Compliance_name, int32(x))
}

func (Compliance) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{0}
}

type OperatingSystem int32

const (
	OperatingSystem_UBUNTU OperatingSystem = 0
	OperatingSystem_DEBIAN OperatingSystem = 1
	OperatingSystem_CENTOS OperatingSystem = 2
	OperatingSystem_RHEL   OperatingSystem = 3
	OperatingSystem_MACOS  OperatingSystem = 4
)

var OperatingSystem_name = map[int32]string{
	0: "UBUNTU",
	1: "DEBIAN",
	2: "CENTOS",
	3: "RHEL",
	4: "MACOS",
}

var OperatingSystem_value = map[string]int32{
	"UBUNTU": 0,
	"DEBIAN": 1,
	"CENTOS": 2,
	"RHEL":   3,
	"MACOS":  4,
}

func (x OperatingSystem) String() string {
	return proto.EnumName(OperatingSystem_name, int32(x))
}

func (OperatingSystem) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{1}
}

// Builds must be uniquely addressable from the top level so that they can be used to look up the location of binaries.
// Format: filter_profile(-compliance_profile)/operating_system-operating_system_version:envoy_version
// Examples:
//   - istio-fips1402/ubuntu-16.04:1.10.1
//   - standard/debian-8:nightly
type Manifest struct {
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Key is composite key of the value's filter_profile and compliance_profile
	// Note: compliance_profile is optional
	// Format: filter_profile(-compliance_profile)
	Flavors              map[string]*Flavor `protobuf:"bytes,2,rep,name=flavors,proto3" json:"flavors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Manifest) Reset()         { *m = Manifest{} }
func (m *Manifest) String() string { return proto.CompactTextString(m) }
func (*Manifest) ProtoMessage()    {}
func (*Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{0}
}

func (m *Manifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest.Unmarshal(m, b)
}
func (m *Manifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest.Marshal(b, m, deterministic)
}
func (m *Manifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest.Merge(m, src)
}
func (m *Manifest) XXX_Size() int {
	return xxx_messageInfo_Manifest.Size(m)
}
func (m *Manifest) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest proto.InternalMessageInfo

func (m *Manifest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Manifest) GetFlavors() map[string]*Flavor {
	if m != nil {
		return m.Flavors
	}
	return nil
}

type Flavor struct {
	// Filter profile is the name of the collection of filters
	// E.g. Standard, Minimal, Istio
	FilterProfile string `protobuf:"bytes,1,opt,name=filter_profile,json=filterProfile,proto3" json:"filter_profile,omitempty"`
	// All filters available in this flavor
	Filters     []string     `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Compliances []Compliance `protobuf:"varint,3,rep,packed,name=compliances,proto3,enum=api.Compliance" json:"compliances,omitempty"`
	// Key is composite key of the value's operating_system, operating_system_version and envoy_version
	// Format: operating_system-operating_system_version:envoy_version
	Builds               map[string]*Build `protobuf:"bytes,5,rep,name=builds,proto3" json:"builds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Flavor) Reset()         { *m = Flavor{} }
func (m *Flavor) String() string { return proto.CompactTextString(m) }
func (*Flavor) ProtoMessage()    {}
func (*Flavor) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{1}
}

func (m *Flavor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flavor.Unmarshal(m, b)
}
func (m *Flavor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flavor.Marshal(b, m, deterministic)
}
func (m *Flavor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flavor.Merge(m, src)
}
func (m *Flavor) XXX_Size() int {
	return xxx_messageInfo_Flavor.Size(m)
}
func (m *Flavor) XXX_DiscardUnknown() {
	xxx_messageInfo_Flavor.DiscardUnknown(m)
}

var xxx_messageInfo_Flavor proto.InternalMessageInfo

func (m *Flavor) GetFilterProfile() string {
	if m != nil {
		return m.FilterProfile
	}
	return ""
}

func (m *Flavor) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Flavor) GetCompliances() []Compliance {
	if m != nil {
		return m.Compliances
	}
	return nil
}

func (m *Flavor) GetBuilds() map[string]*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type Build struct {
	OperatingSystem        OperatingSystem `protobuf:"varint,1,opt,name=operating_system,json=operatingSystem,proto3,enum=api.OperatingSystem" json:"operating_system,omitempty"`
	OperatingSystemVersion string          `protobuf:"bytes,2,opt,name=operating_system_version,json=operatingSystemVersion,proto3" json:"operating_system_version,omitempty"`
	EnvoyVersion           string          `protobuf:"bytes,3,opt,name=envoy_version,json=envoyVersion,proto3" json:"envoy_version,omitempty"`
	DownloadLocationUrl    string          `protobuf:"bytes,4,opt,name=download_location_url,json=downloadLocationUrl,proto3" json:"download_location_url,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{2}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetOperatingSystem() OperatingSystem {
	if m != nil {
		return m.OperatingSystem
	}
	return OperatingSystem_UBUNTU
}

func (m *Build) GetOperatingSystemVersion() string {
	if m != nil {
		return m.OperatingSystemVersion
	}
	return ""
}

func (m *Build) GetEnvoyVersion() string {
	if m != nil {
		return m.EnvoyVersion
	}
	return ""
}

func (m *Build) GetDownloadLocationUrl() string {
	if m != nil {
		return m.DownloadLocationUrl
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.Compliance", Compliance_name, Compliance_value)
	proto.RegisterEnum("api.OperatingSystem", OperatingSystem_name, OperatingSystem_value)
	proto.RegisterType((*Manifest)(nil), "api.Manifest")
	proto.RegisterMapType((map[string]*Flavor)(nil), "api.Manifest.FlavorsEntry")
	proto.RegisterType((*Flavor)(nil), "api.Flavor")
	proto.RegisterMapType((map[string]*Build)(nil), "api.Flavor.BuildsEntry")
	proto.RegisterType((*Build)(nil), "api.Build")
}

func init() { proto.RegisterFile("api/manifest.proto", fileDescriptor_346685e380de5b1f) }

var fileDescriptor_346685e380de5b1f = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xdd, 0x6e, 0xda, 0x30,
	0x14, 0x6e, 0x12, 0xa0, 0xe5, 0xa4, 0x40, 0xe4, 0xfd, 0x45, 0xec, 0x26, 0xeb, 0x34, 0x09, 0xf5,
	0x22, 0x5d, 0xb3, 0x5e, 0x54, 0xbb, 0x99, 0x0a, 0x4b, 0xb7, 0x4e, 0x2d, 0x54, 0xa1, 0xec, 0x36,
	0x72, 0xc1, 0x4c, 0xd6, 0x8c, 0x1d, 0x39, 0x81, 0x89, 0xe7, 0xd9, 0x63, 0xed, 0x35, 0xf6, 0x00,
	0x53, 0xec, 0xb8, 0x4b, 0x51, 0xef, 0x8e, 0xbf, 0xbf, 0x9c, 0x2f, 0x36, 0x20, 0x9c, 0xd1, 0x93,
	0x15, 0xe6, 0x74, 0x49, 0xf2, 0x22, 0xcc, 0xa4, 0x28, 0x04, 0x72, 0x70, 0x46, 0x8f, 0x7e, 0x5b,
	0x70, 0x70, 0x53, 0xe1, 0xc8, 0x87, 0xfd, 0x0d, 0x91, 0x39, 0x15, 0xdc, 0xb7, 0x02, 0x6b, 0xd0,
	0x4e, 0xcc, 0x11, 0x9d, 0xc1, 0xfe, 0x92, 0xe1, 0x8d, 0x90, 0xb9, 0x6f, 0x07, 0xce, 0xc0, 0x8d,
	0xfa, 0x21, 0xce, 0x68, 0x68, 0x9c, 0xe1, 0xa5, 0x26, 0x63, 0x5e, 0xc8, 0x6d, 0x62, 0xa4, 0xfd,
	0x2f, 0x70, 0x58, 0x27, 0x90, 0x07, 0xce, 0x4f, 0xb2, 0xad, 0xb2, 0xcb, 0x11, 0xbd, 0x81, 0xe6,
	0x06, 0xb3, 0x35, 0xf1, 0xed, 0xc0, 0x1a, 0xb8, 0x91, 0xab, 0x52, 0xb5, 0x27, 0xd1, 0xcc, 0x47,
	0xfb, 0xdc, 0x3a, 0xfa, 0x6b, 0x41, 0x4b, 0xa3, 0xe8, 0x1d, 0x74, 0x97, 0x94, 0x15, 0x44, 0xa6,
	0x99, 0x14, 0x4b, 0xca, 0x48, 0x15, 0xd7, 0xd1, 0xe8, 0xad, 0x06, 0xcb, 0x2a, 0x1a, 0xd0, 0x0b,
	0xb7, 0x13, 0x73, 0x44, 0xa7, 0xe0, 0xce, 0xc5, 0x2a, 0x63, 0x14, 0xf3, 0x39, 0xc9, 0x7d, 0x27,
	0x70, 0x06, 0xdd, 0xa8, 0xa7, 0x3e, 0x3c, 0x7a, 0xc0, 0x93, 0xba, 0x06, 0x9d, 0x40, 0xeb, 0x7e,
	0x4d, 0xd9, 0x22, 0xf7, 0x9b, 0xaa, 0xfc, 0xab, 0xda, 0x9a, 0xe1, 0x50, 0x31, 0xba, 0x79, 0x25,
	0xeb, 0xc7, 0xe0, 0xd6, 0xe0, 0x27, 0x7a, 0x07, 0x8f, 0x7b, 0x83, 0x0a, 0x54, 0x96, 0x7a, 0xed,
	0x3f, 0x16, 0x34, 0x15, 0x88, 0x3e, 0x81, 0x27, 0x32, 0x22, 0x71, 0x41, 0xf9, 0x8f, 0x34, 0xdf,
	0xe6, 0x05, 0x59, 0xa9, 0xb8, 0x6e, 0xf4, 0x5c, 0x59, 0x27, 0x86, 0x9c, 0x2a, 0x2e, 0xe9, 0x89,
	0xc7, 0x00, 0x3a, 0x07, 0x7f, 0x37, 0x20, 0x35, 0x77, 0x6d, 0xab, 0xbd, 0x5e, 0xee, 0x58, 0xbe,
	0x57, 0x57, 0xff, 0x16, 0x3a, 0x84, 0x6f, 0xc4, 0xf6, 0x41, 0xee, 0x28, 0xf9, 0xa1, 0x02, 0x8d,
	0x28, 0x82, 0x17, 0x0b, 0xf1, 0x8b, 0x33, 0x81, 0x17, 0x29, 0x13, 0x73, 0x5c, 0x50, 0xc1, 0xd3,
	0xb5, 0x64, 0x7e, 0x43, 0x89, 0x9f, 0x19, 0xf2, 0xba, 0xe2, 0x66, 0x92, 0x1d, 0xbf, 0x06, 0xf8,
	0xff, 0xc3, 0x51, 0x07, 0xda, 0x97, 0x57, 0xb7, 0xd3, 0xf4, 0xf4, 0xec, 0x7d, 0xe4, 0xed, 0x1d,
	0x7f, 0x83, 0xde, 0x4e, 0x27, 0x04, 0xd0, 0x9a, 0x0d, 0x67, 0xe3, 0xbb, 0x99, 0xb7, 0x57, 0xce,
	0x9f, 0xe3, 0xe1, 0xd5, 0xc5, 0xd8, 0xb3, 0xca, 0x79, 0x14, 0x8f, 0xef, 0x26, 0x53, 0xcf, 0x46,
	0x07, 0xd0, 0x48, 0xbe, 0xc6, 0xd7, 0x9e, 0x83, 0xda, 0xd0, 0xbc, 0xb9, 0x18, 0x4d, 0xa6, 0x5e,
	0xe3, 0xbe, 0xa5, 0xde, 0xfb, 0x87, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x58, 0x72, 0xac, 0x50,
	0x05, 0x03, 0x00, 0x00,
}
